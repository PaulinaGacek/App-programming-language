# Generated from ./antlr4/App.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2D")
        buf.write("\u01c3\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\5\3\5")
        buf.write("\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3")
        buf.write("\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3")
        buf.write("\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32")
        buf.write("\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34")
        buf.write("\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37")
        buf.write("\3\37\3\37\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3#\3")
        buf.write("$\3$\3$\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3)\3")
        buf.write(")\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3,\3,\3")
        buf.write(",\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3.\3")
        buf.write(".\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3")
        buf.write("\60\3\60\3\60\3\61\3\61\3\61\3\62\3\62\3\62\3\63\3\63")
        buf.write("\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65")
        buf.write("\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66")
        buf.write("\3\66\3\66\3\66\3\66\3\66\3\67\3\67\38\38\39\39\39\3:")
        buf.write("\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3;\3")
        buf.write(";\3;\3;\3;\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3=\3=\3=\3=\3")
        buf.write("=\3>\3>\3>\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\2\2D\3")
        buf.write("\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16")
        buf.write("\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61")
        buf.write("\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*")
        buf.write("S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w")
        buf.write("=y>{?}@\177A\u0081B\u0083C\u0085D\3\2\6\5\2\13\f\17\17")
        buf.write("\"\"\3\2c|\3\2C\\\3\2\63;\2\u01c2\2\3\3\2\2\2\2\5\3\2")
        buf.write("\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2")
        buf.write("\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2")
        buf.write("\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37")
        buf.write("\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2")
        buf.write("\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2")
        buf.write("\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2")
        buf.write("\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2")
        buf.write("\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2")
        buf.write("\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3")
        buf.write("\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a")
        buf.write("\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2")
        buf.write("k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2")
        buf.write("\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2")
        buf.write("\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085")
        buf.write("\3\2\2\2\3\u0087\3\2\2\2\5\u0089\3\2\2\2\7\u008e\3\2\2")
        buf.write("\2\t\u0092\3\2\2\2\13\u0098\3\2\2\2\r\u009f\3\2\2\2\17")
        buf.write("\u00a5\3\2\2\2\21\u00a7\3\2\2\2\23\u00a9\3\2\2\2\25\u00ab")
        buf.write("\3\2\2\2\27\u00ad\3\2\2\2\31\u00af\3\2\2\2\33\u00b1\3")
        buf.write("\2\2\2\35\u00b3\3\2\2\2\37\u00b5\3\2\2\2!\u00b7\3\2\2")
        buf.write("\2#\u00bd\3\2\2\2%\u00c0\3\2\2\2\'\u00c4\3\2\2\2)\u00ca")
        buf.write("\3\2\2\2+\u00cc\3\2\2\2-\u00ce\3\2\2\2/\u00d0\3\2\2\2")
        buf.write("\61\u00d7\3\2\2\2\63\u00da\3\2\2\2\65\u00e4\3\2\2\2\67")
        buf.write("\u00ee\3\2\2\29\u00f2\3\2\2\2;\u00f5\3\2\2\2=\u00fa\3")
        buf.write("\2\2\2?\u0100\3\2\2\2A\u0103\3\2\2\2C\u0105\3\2\2\2E\u0107")
        buf.write("\3\2\2\2G\u010a\3\2\2\2I\u010d\3\2\2\2K\u0110\3\2\2\2")
        buf.write("M\u0115\3\2\2\2O\u011a\3\2\2\2Q\u0123\3\2\2\2S\u012f\3")
        buf.write("\2\2\2U\u0134\3\2\2\2W\u013c\3\2\2\2Y\u014c\3\2\2\2[\u014f")
        buf.write("\3\2\2\2]\u015b\3\2\2\2_\u0162\3\2\2\2a\u0165\3\2\2\2")
        buf.write("c\u0168\3\2\2\2e\u016b\3\2\2\2g\u016d\3\2\2\2i\u016f\3")
        buf.write("\2\2\2k\u017d\3\2\2\2m\u0188\3\2\2\2o\u018a\3\2\2\2q\u018c")
        buf.write("\3\2\2\2s\u018f\3\2\2\2u\u01a0\3\2\2\2w\u01a9\3\2\2\2")
        buf.write("y\u01af\3\2\2\2{\u01b4\3\2\2\2}\u01b9\3\2\2\2\177\u01bb")
        buf.write("\3\2\2\2\u0081\u01bd\3\2\2\2\u0083\u01bf\3\2\2\2\u0085")
        buf.write("\u01c1\3\2\2\2\u0087\u0088\7=\2\2\u0088\4\3\2\2\2\u0089")
        buf.write("\u008a\7V\2\2\u008a\u008b\7K\2\2\u008b\u008c\7O\2\2\u008c")
        buf.write("\u008d\7G\2\2\u008d\6\3\2\2\2\u008e\u008f\7K\2\2\u008f")
        buf.write("\u0090\7P\2\2\u0090\u0091\7V\2\2\u0091\b\3\2\2\2\u0092")
        buf.write("\u0093\7H\2\2\u0093\u0094\7Q\2\2\u0094\u0095\7T\2\2\u0095")
        buf.write("\u0096\7E\2\2\u0096\u0097\7G\2\2\u0097\n\3\2\2\2\u0098")
        buf.write("\u0099\7Q\2\2\u0099\u009a\7D\2\2\u009a\u009b\7L\2\2\u009b")
        buf.write("\u009c\7G\2\2\u009c\u009d\7E\2\2\u009d\u009e\7V\2\2\u009e")
        buf.write("\f\3\2\2\2\u009f\u00a0\7H\2\2\u00a0\u00a1\7N\2\2\u00a1")
        buf.write("\u00a2\7Q\2\2\u00a2\u00a3\7C\2\2\u00a3\u00a4\7V\2\2\u00a4")
        buf.write("\16\3\2\2\2\u00a5\u00a6\7a\2\2\u00a6\20\3\2\2\2\u00a7")
        buf.write("\u00a8\7/\2\2\u00a8\22\3\2\2\2\u00a9\u00aa\7\60\2\2\u00aa")
        buf.write("\24\3\2\2\2\u00ab\u00ac\7<\2\2\u00ac\26\3\2\2\2\u00ad")
        buf.write("\u00ae\7]\2\2\u00ae\30\3\2\2\2\u00af\u00b0\7.\2\2\u00b0")
        buf.write("\32\3\2\2\2\u00b1\u00b2\7_\2\2\u00b2\34\3\2\2\2\u00b3")
        buf.write("\u00b4\7*\2\2\u00b4\36\3\2\2\2\u00b5\u00b6\7+\2\2\u00b6")
        buf.write(" \3\2\2\2\u00b7\u00b8\7C\2\2\u00b8\u00b9\7R\2\2\u00b9")
        buf.write("\u00ba\7R\2\2\u00ba\u00bb\7N\2\2\u00bb\u00bc\7[\2\2\u00bc")
        buf.write("\"\3\2\2\2\u00bd\u00be\7V\2\2\u00be\u00bf\7Q\2\2\u00bf")
        buf.write("$\3\2\2\2\u00c0\u00c1\7H\2\2\u00c1\u00c2\7Q\2\2\u00c2")
        buf.write("\u00c3\7T\2\2\u00c3&\3\2\2\2\u00c4\u00c5\7F\2\2\u00c5")
        buf.write("\u00c6\7G\2\2\u00c6\u00c7\7N\2\2\u00c7\u00c8\7C\2\2\u00c8")
        buf.write("\u00c9\7[\2\2\u00c9(\3\2\2\2\u00ca\u00cb\7-\2\2\u00cb")
        buf.write("*\3\2\2\2\u00cc\u00cd\7\61\2\2\u00cd,\3\2\2\2\u00ce\u00cf")
        buf.write("\7,\2\2\u00cf.\3\2\2\2\u00d0\u00d1\7F\2\2\u00d1\u00d2")
        buf.write("\7G\2\2\u00d2\u00d3\7H\2\2\u00d3\u00d4\7K\2\2\u00d4\u00d5")
        buf.write("\7P\2\2\u00d5\u00d6\7G\2\2\u00d6\60\3\2\2\2\u00d7\u00d8")
        buf.write("\7C\2\2\u00d8\u00d9\7U\2\2\u00d9\62\3\2\2\2\u00da\u00db")
        buf.write("\7Y\2\2\u00db\u00dc\7K\2\2\u00dc\u00dd\7V\2\2\u00dd\u00de")
        buf.write("\7J\2\2\u00de\u00df\7\"\2\2\u00df\u00e0\7O\2\2\u00e0\u00e1")
        buf.write("\7C\2\2\u00e1\u00e2\7U\2\2\u00e2\u00e3\7U\2\2\u00e3\64")
        buf.write("\3\2\2\2\u00e4\u00e5\7Y\2\2\u00e5\u00e6\7K\2\2\u00e6\u00e7")
        buf.write("\7V\2\2\u00e7\u00e8\7J\2\2\u00e8\u00e9\7\"\2\2\u00e9\u00ea")
        buf.write("\7U\2\2\u00ea\u00eb\7K\2\2\u00eb\u00ec\7\\\2\2\u00ec\u00ed")
        buf.write("\7G\2\2\u00ed\66\3\2\2\2\u00ee\u00ef\7U\2\2\u00ef\u00f0")
        buf.write("\7G\2\2\u00f0\u00f1\7V\2\2\u00f18\3\2\2\2\u00f2\u00f3")
        buf.write("\7K\2\2\u00f3\u00f4\7H\2\2\u00f4:\3\2\2\2\u00f5\u00f6")
        buf.write("\7V\2\2\u00f6\u00f7\7J\2\2\u00f7\u00f8\7G\2\2\u00f8\u00f9")
        buf.write("\7P\2\2\u00f9<\3\2\2\2\u00fa\u00fb\7G\2\2\u00fb\u00fc")
        buf.write("\7P\2\2\u00fc\u00fd\7F\2\2\u00fd\u00fe\7K\2\2\u00fe\u00ff")
        buf.write("\7H\2\2\u00ff>\3\2\2\2\u0100\u0101\7?\2\2\u0101\u0102")
        buf.write("\7?\2\2\u0102@\3\2\2\2\u0103\u0104\7@\2\2\u0104B\3\2\2")
        buf.write("\2\u0105\u0106\7>\2\2\u0106D\3\2\2\2\u0107\u0108\7@\2")
        buf.write("\2\u0108\u0109\7?\2\2\u0109F\3\2\2\2\u010a\u010b\7>\2")
        buf.write("\2\u010b\u010c\7?\2\2\u010cH\3\2\2\2\u010d\u010e\7#\2")
        buf.write("\2\u010e\u010f\7?\2\2\u010fJ\3\2\2\2\u0110\u0111\7G\2")
        buf.write("\2\u0111\u0112\7N\2\2\u0112\u0113\7K\2\2\u0113\u0114\7")
        buf.write("H\2\2\u0114L\3\2\2\2\u0115\u0116\7G\2\2\u0116\u0117\7")
        buf.write("N\2\2\u0117\u0118\7U\2\2\u0118\u0119\7G\2\2\u0119N\3\2")
        buf.write("\2\2\u011a\u011b\7R\2\2\u011b\u011c\7C\2\2\u011c\u011d")
        buf.write("\7T\2\2\u011d\u011e\7C\2\2\u011e\u011f\7N\2\2\u011f\u0120")
        buf.write("\7N\2\2\u0120\u0121\7G\2\2\u0121\u0122\7N\2\2\u0122P\3")
        buf.write("\2\2\2\u0123\u0124\7G\2\2\u0124\u0125\7P\2\2\u0125\u0126")
        buf.write("\7F\2\2\u0126\u0127\7R\2\2\u0127\u0128\7C\2\2\u0128\u0129")
        buf.write("\7T\2\2\u0129\u012a\7C\2\2\u012a\u012b\7N\2\2\u012b\u012c")
        buf.write("\7N\2\2\u012c\u012d\7G\2\2\u012d\u012e\7N\2\2\u012eR\3")
        buf.write("\2\2\2\u012f\u0130\7N\2\2\u0130\u0131\7Q\2\2\u0131\u0132")
        buf.write("\7Q\2\2\u0132\u0133\7R\2\2\u0133T\3\2\2\2\u0134\u0135")
        buf.write("\7G\2\2\u0135\u0136\7P\2\2\u0136\u0137\7F\2\2\u0137\u0138")
        buf.write("\7N\2\2\u0138\u0139\7Q\2\2\u0139\u013a\7Q\2\2\u013a\u013b")
        buf.write("\7R\2\2\u013bV\3\2\2\2\u013c\u013d\7F\2\2\u013d\u013e")
        buf.write("\7G\2\2\u013e\u013f\7H\2\2\u013f\u0140\7K\2\2\u0140\u0141")
        buf.write("\7P\2\2\u0141\u0142\7G\2\2\u0142\u0143\7\"\2\2\u0143\u0144")
        buf.write("\7H\2\2\u0144\u0145\7W\2\2\u0145\u0146\7P\2\2\u0146\u0147")
        buf.write("\7E\2\2\u0147\u0148\7V\2\2\u0148\u0149\7K\2\2\u0149\u014a")
        buf.write("\7Q\2\2\u014a\u014b\7P\2\2\u014bX\3\2\2\2\u014c\u014d")
        buf.write("\7/\2\2\u014d\u014e\7@\2\2\u014eZ\3\2\2\2\u014f\u0150")
        buf.write("\7G\2\2\u0150\u0151\7P\2\2\u0151\u0152\7F\2\2\u0152\u0153")
        buf.write("\7H\2\2\u0153\u0154\7W\2\2\u0154\u0155\7P\2\2\u0155\u0156")
        buf.write("\7E\2\2\u0156\u0157\7V\2\2\u0157\u0158\7K\2\2\u0158\u0159")
        buf.write("\7Q\2\2\u0159\u015a\7P\2\2\u015a\\\3\2\2\2\u015b\u015c")
        buf.write("\7T\2\2\u015c\u015d\7G\2\2\u015d\u015e\7V\2\2\u015e\u015f")
        buf.write("\7W\2\2\u015f\u0160\7T\2\2\u0160\u0161\7P\2\2\u0161^\3")
        buf.write("\2\2\2\u0162\u0163\7\61\2\2\u0163\u0164\7,\2\2\u0164`")
        buf.write("\3\2\2\2\u0165\u0166\7,\2\2\u0166\u0167\7\61\2\2\u0167")
        buf.write("b\3\2\2\2\u0168\u0169\7<\2\2\u0169\u016a\7<\2\2\u016a")
        buf.write("d\3\2\2\2\u016b\u016c\7}\2\2\u016cf\3\2\2\2\u016d\u016e")
        buf.write("\7\177\2\2\u016eh\3\2\2\2\u016f\u0170\7C\2\2\u0170\u0171")
        buf.write("\7P\2\2\u0171\u0172\7I\2\2\u0172\u0173\7N\2\2\u0173\u0174")
        buf.write("\7G\2\2\u0174\u0175\7\"\2\2\u0175\u0176\7D\2\2\u0176\u0177")
        buf.write("\7G\2\2\u0177\u0178\7V\2\2\u0178\u0179\7Y\2\2\u0179\u017a")
        buf.write("\7G\2\2\u017a\u017b\7G\2\2\u017b\u017c\7P\2\2\u017cj\3")
        buf.write("\2\2\2\u017d\u017e\7E\2\2\u017e\u017f\7Q\2\2\u017f\u0180")
        buf.write("\7Q\2\2\u0180\u0181\7T\2\2\u0181\u0182\7F\2\2\u0182\u0183")
        buf.write("\7K\2\2\u0183\u0184\7P\2\2\u0184\u0185\7C\2\2\u0185\u0186")
        buf.write("\7V\2\2\u0186\u0187\7G\2\2\u0187l\3\2\2\2\u0188\u0189")
        buf.write("\7Z\2\2\u0189n\3\2\2\2\u018a\u018b\7[\2\2\u018bp\3\2\2")
        buf.write("\2\u018c\u018d\7Q\2\2\u018d\u018e\7H\2\2\u018er\3\2\2")
        buf.write("\2\u018f\u0190\7F\2\2\u0190\u0191\7K\2\2\u0191\u0192\7")
        buf.write("U\2\2\u0192\u0193\7V\2\2\u0193\u0194\7C\2\2\u0194\u0195")
        buf.write("\7P\2\2\u0195\u0196\7E\2\2\u0196\u0197\7G\2\2\u0197\u0198")
        buf.write("\7\"\2\2\u0198\u0199\7D\2\2\u0199\u019a\7G\2\2\u019a\u019b")
        buf.write("\7V\2\2\u019b\u019c\7Y\2\2\u019c\u019d\7G\2\2\u019d\u019e")
        buf.write("\7G\2\2\u019e\u019f\7P\2\2\u019ft\3\2\2\2\u01a0\u01a1")
        buf.write("\7X\2\2\u01a1\u01a2\7G\2\2\u01a2\u01a3\7N\2\2\u01a3\u01a4")
        buf.write("\7Q\2\2\u01a4\u01a5\7E\2\2\u01a5\u01a6\7K\2\2\u01a6\u01a7")
        buf.write("\7V\2\2\u01a7\u01a8\7[\2\2\u01a8v\3\2\2\2\u01a9\u01aa")
        buf.write("\7X\2\2\u01aa\u01ab\7C\2\2\u01ab\u01ac\7N\2\2\u01ac\u01ad")
        buf.write("\7W\2\2\u01ad\u01ae\7G\2\2\u01aex\3\2\2\2\u01af\u01b0")
        buf.write("\7U\2\2\u01b0\u01b1\7K\2\2\u01b1\u01b2\7P\2\2\u01b2\u01b3")
        buf.write("\7*\2\2\u01b3z\3\2\2\2\u01b4\u01b5\7E\2\2\u01b5\u01b6")
        buf.write("\7Q\2\2\u01b6\u01b7\7U\2\2\u01b7\u01b8\7*\2\2\u01b8|\3")
        buf.write("\2\2\2\u01b9\u01ba\t\2\2\2\u01ba~\3\2\2\2\u01bb\u01bc")
        buf.write("\t\3\2\2\u01bc\u0080\3\2\2\2\u01bd\u01be\t\4\2\2\u01be")
        buf.write("\u0082\3\2\2\2\u01bf\u01c0\t\5\2\2\u01c0\u0084\3\2\2\2")
        buf.write("\u01c1\u01c2\7\62\2\2\u01c2\u0086\3\2\2\2\3\2\2")
        return buf.getvalue()


class AppLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    T__58 = 59
    T__59 = 60
    T__60 = 61
    WS = 62
    LOWERCASELETTER = 63
    UPPERCASELETTER = 64
    NONZERODIGIT = 65
    ZERO = 66

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'TIME'", "'INT'", "'FORCE'", "'OBJECT'", "'FLOAT'", 
            "'_'", "'-'", "'.'", "':'", "'['", "','", "']'", "'('", "')'", 
            "'APPLY'", "'TO'", "'FOR'", "'DELAY'", "'+'", "'/'", "'*'", 
            "'DEFINE'", "'AS'", "'WITH MASS'", "'WITH SIZE'", "'SET'", "'IF'", 
            "'THEN'", "'ENDIF'", "'=='", "'>'", "'<'", "'>='", "'<='", "'!='", 
            "'ELIF'", "'ELSE'", "'PARALLEL'", "'ENDPARALLEL'", "'LOOP'", 
            "'ENDLOOP'", "'DEFINE FUNCTION'", "'->'", "'ENDFUNCTION'", "'RETURN'", 
            "'/*'", "'*/'", "'::'", "'{'", "'}'", "'ANGLE BETWEEN'", "'COORDINATE'", 
            "'X'", "'Y'", "'OF'", "'DISTANCE BETWEEN'", "'VELOCITY'", "'VALUE'", 
            "'SIN('", "'COS('", "'0'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "LOWERCASELETTER", "UPPERCASELETTER", "NONZERODIGIT", 
            "ZERO" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "T__57", "T__58", "T__59", "T__60", "WS", "LOWERCASELETTER", 
                  "UPPERCASELETTER", "NONZERODIGIT", "ZERO" ]

    grammarFileName = "App.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


